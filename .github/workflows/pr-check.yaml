name: pr check

on:
  workflow_dispatch: # 手動実行トリガー
  push:
    # 自身のワークフロー定義ファイルが更新されたときだけトリガー
    paths:
      - .github/workflows/pr-check.yaml
      - .github/workflows/script/collect_pr_status.py

jobs:
  pr-check:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read
    steps:
      - uses: actions/checkout@v4
      - id: checkout-wiki
        # Wiki リポジトリをチェックアウト。存在しない場合でも失敗させない
        uses: actions/checkout@v4
        continue-on-error: true
        with:
          repository: ${{ github.repository }}.wiki
          path: wiki
      - name: pr-check
        # CLI で取得した PR 情報を <リポジトリ名>_PR_status.md として Markdown にまとめる
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          LOG_LEVEL: DEBUG
          LOGIN_USERS_B64: ${{ vars.LOGIN_USERS_B64 }}
          # スペースや改行で区切って複数指定可能なサブリポジトリ一覧
          SUB_REPOSITORY: |
            r-toku/sandbox-repo
        run: |
          ls -l .github/workflows/script/
          # メインリポジトリとサブリポジトリの PR ステータスを収集し *_PR_status.md を生成
          for repo in "${GITHUB_REPOSITORY}" $SUB_REPOSITORY; do
            [ -z "$repo" ] && continue
            python .github/workflows/script/collect_pr_status.py wiki --repo "$repo"
          done
      - name: update-wiki
        # Wiki のチェックアウトが成功したときのみ更新を実行
        if: steps.checkout-wiki.outcome == 'success'
        env:
          LOG_LEVEL: DEBUG
        run: python .github/workflows/script/update_wiki.py wiki
